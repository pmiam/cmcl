#+options: ':nil *:t -:t ::t <:t H:3 \n:nil ^:t arch:headline
#+options: author:t broken-links:nil c:nil creator:nil
#+options: d:(not "LOGBOOK") date:t e:t email:nil f:t inline:t num:t
#+options: p:nil pri:nil prop:nil stat:t tags:t tasks:t tex:t
#+options: timestamp:t title:t toc:t todo:t |:t
#+title: README
#+date: <2022-02-03 Thu>
#+author: Panayotis Manganaris
#+email: pmangana@purdue.edu
#+language: en
#+select_tags: export
#+exclude_tags: noexport
#+creator: Emacs 29.0.50 (Org mode 9.5.2)
#+cite_export:
* Overview
This README also serves as a design document. Any heading marked TODO
may as well be wishful thinking.

cmcl is a high-level library for aggregating chemical datasets and
computing a variety of features

It includes a simple user interface for aggregating data from
computational experiments and committing the results to a local
database. It also includes tools for sharing this database with
collaborators.

cmcl is built around Pandas. This ensures data is handled efficiently
as it is processed through any variety of inquiries, transformations,
and mapping operations enabled through the succinct and powerful
Pandas api
* TODO Data
- [ ] VASP parser
- [ ] sqlite rclone interface
- [ ] cmcl database
* NEXT Featurization
:STATUSLOG:
- State "NEXT"       from "TODO"       [2022-02-13 Sun 16:02]
:END:
cmcl's main offer is easy featurization of chemical datasets.

Tabular records of chemical formula and associated observations need
only be loaded as a dataframe before cmcl's formula parser can be used
to convert formula strings into equivalent numerical descriptors.
- [X] descriptors->relational queries via pandas
- [ ] descriptors->Composition objects->pymatgen feature descriptors
- [ ] structure object generation and feature calculations

These compositions -- themselves a dataframe -- can then be further
processed into other feature sets using a variety of libraries
- mendeleev [[cite:&mendeleev2014]]
- Matminer
- DScribe [[cite:&himanen-2020-dscrib]]
- MEGnet [[cite:&chen-2019-graph-networ]]
** Perovskite Property Computation
- [ ] compute SLME for photovoltaic absorbers.
  Uses SL3ME Implementation of [[cite:&yu-2012-ident-poten]] by @Idwillia on github

* Data Handling Workflow
** TODO Data Aggregation
cmcl exposes itself as a commandline tool for aggregate computational
data from VASP and Quantum Espresso experiment directory trees
* TODO Formula generation
includes tools for randomly creating formula from a set of
rules. Usually better to systematically plan an experiment though
* Property Prediction
cmcl includes some pretrained models which may be used to infer the
properties of chemistries
** TODO Methods for applying pretrained models 
* Installation
cmcl is very early in development.
** Install by cloning the repository
yogi can be installed into a standard python environment.  It is a
poetry project and may be installed using pip.

proceed to run your python process/jupyter kernel of choice and enjoy.
* Contribution
Yes Please.

To create clean development environment, simply fork/clone the
repository and the poetry.lock file will take care of dependency
management.

* TODO Usage Examples
** aggregating data
#+begin_example
$ cd /to/experiment/dir
$ python
>>> cmcl aggregate *
#+end_example
** compute features 
#+begin_src jupyter-python :session "py" :exports "both" :results "raw drawer"
  import pandas as pd
  from cmcl.data.frame import *
  #df.Formula or df.formula must exist as a data column.
  #there's a fairly broad range of acceptable formula grammer
  df.ft.comp()
#+end_src
* TODO Data Aggregation
** TODO pymatgen assimilation library
For collecting VASP results
** TODO NOMAD?
use nomad for metadata generation and more?
* TODO Data Sharing
** TODO Local DB
cmcl will create a local database upon a call to a dataframe's cmclwrite method.

this database can then be freely populated with dataframes
** TODO "Collaboration Remote"
cmcl also provides a "push" method that allows users to choose a remote host

and share local tables with it. cmcl is of the philosophy that ALL data is good data

so, "pull" is implicit. the database only ever grows. nothing is ever overwritten.

#+begin_example
$ rclone sync purduebox:/Mannodi_group_research_material/Perovskite\ Dataset/perovskites.db
#+end_example
** TODO "Publish Remote"
cmcl implements OPTIMATE to provide an easy universal query and, where
possible, publish option for sharing your data with global platforms
* External Datasets 
compare model to experimental results for validation
1. [[cite:&almora-2020-devic-perfor]] meta-analysis of Perovskite PV devices.
2. more literature compounds.
3. Materials Zone aggregate database.
* Citations
bibliographystyle:authordate1
bibliography:~/org/bibliotex/bibliotex.bib
